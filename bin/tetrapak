#!/usr/bin/env escript
% vim: filetype=erlang

-include_lib("tetrapak/include/tetrapak.hrl").

main([]) -> usage();
main(Args) ->
  ArgDesc    = [{arg, template}],
  OptionDesc = [{option_arg, publish, ["--publish", "-p"], false},
                {flag,       help,    ["--help", "-h"],    false}],
  case (catch tep_util:parse_cmdline(Args, OptionDesc, ArgDesc)) of
    {ok, Options} ->
      case proplists:get_bool(help, Options) of
        true -> usage();
        false -> run(proplists:get_value(template, Options), Options)
      end;
    _ -> 
      usage()
  end.

run(Template, Options) ->
  case tetrapak:is_template(Template) of
    true ->
      {ok, Cwd} = file:get_cwd(),
      tetrapak:run(Cwd, Template, Options);
    false ->
      io:format("error: no such template: ~s~n", [Template])
  end.

list_repos() ->
  Repos = tep_config:repositories(),
  case Repos of
    [] -> io:format("No repositories configured.~n");
    _  ->
      io:format("Available Repositories:~n"),
      lists:foreach(fun (#tep_repository{name = Name, type = Type}) ->
            io:format("   * ~s (~s) ~n", [Name, Type])
        end, Repos)
  end.

usage() ->
  io:format(
"Usage: tetrapak [ options ] <template>

Recognized Options:
   -p, --publish <repo_name>   attempt to publish resulting package to
                               the given named repository
   -h, --help                  print this help~n~n"),
  list_repos().
